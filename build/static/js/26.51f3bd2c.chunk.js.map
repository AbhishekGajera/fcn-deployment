{"version":3,"sources":["app/Admin-components/BranchesList/index.js"],"names":["BranchList","useCookies","cookies","useState","itemlist","setitemlist","setCurrentItems","pageCount","setPageCount","itemOffset","setItemOffset","itemsPerPage","useEffect","a","endOffset","getBranches","data","items","results","console","info","log","slice","Math","ceil","length","className","aria-label","href","onClick","event","preventDefault","user","role","aria-current","map","item","name","contactno","branch","email","id","Swal","fire","title","text","icon","showCancelButton","cancelButtonColor","confirmButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","dismiss","DismissReason","cancel","breakLabel","nextLabel","onPageChange","newOffset","selected","pageRangeDisplayed","previousLabel","renderOnZeroPageCount"],"mappings":"+OA4IeA,UAtII,WAAO,IAAD,EACvB,EAAkBC,YAAW,CAAC,SAAvBC,EAAP,oBACA,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAGA,EAAwCF,mBAAS,MAAjD,mBAAqBG,GAArB,WACA,EAAkCH,mBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KAGA,EAAoCL,mBAAS,GAA7C,mBAAOM,EAAP,KAAmBC,EAAnB,KACA,EAAwCP,mBAAS,IAAjD,mBAAOQ,EAAP,UAEAC,qBAAU,WACR,sBAAC,kCAAAC,EAAA,6DACOC,EAAYL,EAAaE,EADhC,SAE4BI,YAAYJ,EAAcF,GAFtD,8BAEmEO,KAFnE,OAEOC,EAFP,OAGCZ,EAAW,OAACY,QAAD,IAACA,OAAD,EAACA,EAAOC,SACnBC,QAAQC,KAAK,SAAUH,GAGvBE,QAAQE,IAAR,6BAAkCZ,EAAlC,eAAmDK,IACnDR,EAAe,OAACW,QAAD,IAACA,GAAD,UAACA,EAAOC,eAAR,aAAC,EAAgBI,MAAMb,EAAYK,IAClDN,EAAae,KAAKC,MAAU,OAALP,QAAK,IAALA,GAAA,UAAAA,EAAOC,eAAP,eAAgBO,QAASd,IATjD,2CAAD,KAWC,CAACF,EAAYE,IAqChB,OACE,6BACE,yBAAKe,UAAU,eACb,wBAAIA,UAAU,cAAd,2BACA,yBAAKC,aAAW,cACd,wBAAID,UAAU,cACZ,wBAAIA,UAAU,mBACZ,uBAAGE,KAAK,KAAKC,QAAS,SAACC,GAAD,OAAWA,EAAMC,mBAAvC,OACG7B,QADH,IACGA,GADH,UACGA,EAAS8B,YADZ,aACG,EAAeC,KADlB,eAIF,wBAAIP,UAAU,yBAAyBQ,eAAa,QAApD,qBAMN,yBAAKR,UAAU,yCACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAd,eAEA,yBAAKA,UAAU,oBACb,2BAAOA,UAAU,uBACf,+BACE,4BACE,sCACA,6CACA,wCACA,uCACA,sCACA,sCACA,0CAGJ,sCACGtB,QADH,IACGA,OADH,EACGA,EAAU+B,KAAI,SAACC,GACd,OACE,4BACE,mCAAKA,QAAL,IAAKA,OAAL,EAAKA,EAAMC,MACX,mCAAKD,QAAL,IAAKA,OAAL,EAAKA,EAAME,WACX,mCAAKF,QAAL,IAAKA,OAAL,EAAKA,EAAMG,QACX,mCAAKH,QAAL,IAAKA,OAAL,EAAKA,EAAMI,OACX,mCAAKJ,QAAL,IAAKA,OAAL,EAAKA,EAAMH,MACX,4BACE,uBAAGP,UAAU,yBAEf,4BACE,uBAAIG,QAAS,kBAAiB,OAACO,QAAD,IAACA,KAAMK,QA1E3DC,IAAKC,KAAK,CACRC,MAAO,gBACPC,KAAM,uDACNC,KAAM,UACNC,kBAAkB,EAClBC,kBAAmB,UACnBC,mBAAoB,UACpBC,kBAAmB,kBACnBC,iBAAkB,gBACjBC,MAAK,SAACC,GACHA,EAAOC,aAWAD,EAAOE,UAAYb,IAAKc,cAAcC,QAC/Cf,IAAKC,KAAK,YAAa,iCAAkC,aAoDGjB,UAAU,0BAOhE,kBAAC,IAAD,CACEgC,WAAW,MACXC,UAAU,SACVjC,UAAU,cACVkC,aA7FU,SAAC9B,GACvB,IAAM+B,EAAa/B,EAAMgC,SAAWnD,EAAgBP,EAASqB,OAC7DN,QAAQE,IAAR,qCACgCS,EAAMgC,SADtC,6BACmED,IAEnEnD,EAAcmD,IAyFFE,mBAAoB,EACpBxD,UAAWA,EACXyD,cAAc,aACdC,sBAAuB","file":"static/js/26.51f3bd2c.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport ReactPaginate from \"react-paginate\";\nimport { getBranches } from \"../../../utils/APIs\";\nimport Swal from \"sweetalert2\";\n\nconst BranchList = () => {\n  const [cookies] = useCookies([\"user\"]);\n  const [itemlist, setitemlist] = useState([]);\n\n  // We start with an empty list of items.\n  const [currentItems, setCurrentItems] = useState(null);\n  const [pageCount, setPageCount] = useState(0);\n  // Here we use item offsets; we could also use page offsets\n  // following the API or data you're working with.\n  const [itemOffset, setItemOffset] = useState(0);\n  const [itemsPerPage, setitemsPerPage] = useState(10);\n\n  useEffect(() => {\n    (async () => {\n      const endOffset = itemOffset + itemsPerPage;\n      const items = await (await getBranches(itemsPerPage, itemOffset)).data;\n      setitemlist(items?.results);\n      console.info(\"items \", items);\n\n      // Fetch items from another resources.\n      console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n      setCurrentItems(items?.results?.slice(itemOffset, endOffset));\n      setPageCount(Math.ceil(items?.results?.length / itemsPerPage));\n    })();\n  }, [itemOffset, itemsPerPage]);\n\n  // Invoke when user click to request another page.\n  const handlePageClick = (event) => {\n    const newOffset = (event.selected * itemsPerPage) % itemlist.length;\n    console.log(\n      `User requested page number ${event.selected}, which is offset ${newOffset}`\n    );\n    setItemOffset(newOffset);\n  };\n  const deleteBranch =(uid)=>{\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You will not be able to recover this imaginary file!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      cancelButtonColor: \"#DD6B55\",\n      confirmButtonColor: \"#DD6B55\",\n      confirmButtonText: \"Yes, delete it!\",\n      cancelButtonText: \"No, keep it\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        // return (\n        //   deleteUsr(uid, () => {\n        //     list();\n        //   }),\n        //   Swal.fire(\n        //     \"Deleted!\",\n        //     \"Your imaginary file has been deleted.\",\n        //     \"success\",\n        //   )\n        // );\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\"Cancelled\", \"Your imaginary file is safe :)\", \"error\");\n      }\n    });\n  }\n  return (\n    <div>\n      <div className=\"page-header\">\n        <h3 className=\"page-title\">Clients / Fetch Branch </h3>\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\">\n              <a href=\"!#\" onClick={(event) => event.preventDefault()}>\n                {cookies?.user?.role} Dashboard\n              </a>\n            </li>\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\n              Create clients\n            </li>\n          </ol>\n        </nav>\n      </div>\n      <div className=\"col-lg-12 grid-margin stretch-card p0\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h4 className=\"card-title\">Client list</h4>\n\n            <div className=\"table-responsive\">\n              <table className=\"table table-striped\">\n                <thead>\n                  <tr>\n                    <th> Name </th>\n                    <th> Contact no. </th>\n                    <th> Branch </th>\n                    <th> Email </th>\n                    <th> Role </th>\n                    <th> Edit </th>\n                    <th> Delete </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {itemlist?.map((item) => {\n                    return (\n                      <tr>\n                        <td>{item?.name}</td>\n                        <td>{item?.contactno}</td>\n                        <td>{item?.branch}</td>\n                        <td>{item?.email}</td>\n                        <td>{item?.role}</td>\n                        <td>\n                          <i className=\"mdi mdi-lead-pencil\"></i>\n                        </td>\n                        <td>\n                          <i  onClick={()=> deleteBranch(item?.id)} className=\"mdi mdi-delete\"></i>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n              <ReactPaginate\n                breakLabel=\"...\"\n                nextLabel=\"next >\"\n                className=\"client-list\"\n                onPageChange={handlePageClick}\n                pageRangeDisplayed={5}\n                pageCount={pageCount}\n                previousLabel=\"< previous\"\n                renderOnZeroPageCount={null}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BranchList;\n"],"sourceRoot":""}