{"version":3,"sources":["app/user-pages/Settings.js"],"names":["Settings","history","useHistory","useForm","mode","register","handleSubmit","formState","errors","isDirty","isValid","useCookies","cookie","setCookie","onClickLogoutHandler","a","formData","JSON","stringify","refreshToken","localStorage","getItem","path","userLogout","finally","push","onSubmit","data","terms","password","updateProfile","user","id","result","toast","success","response","message","error","process","code","strongRegex","RegExp","strongRegexMo","className","src","require","alt","autoComplete","type","placeholder","name","defaultValue","required","email","pattern","dob","contactno","country","selected","disabled"],"mappings":"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","file":"static/js/39.9de6429c.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { updateProfile, userLogout } from \"../../utils/APIs\";\nimport { useCookies } from \"react-cookie\";\nimport { toast } from \"react-toastify\";\n\nconst Settings = () => {\n  const history = useHistory();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isDirty, isValid },\n  } = useForm({\n    mode: \"onChange\",\n  });\n\n  const [cookie, setCookie] = useCookies([\"user\"]);\n\n  const onClickLogoutHandler = async () => {\n    const formData = JSON.stringify({\n      refreshToken: localStorage.getItem(\"refreshToken\"),\n    });\n    setCookie(\"user\", null, { path: \"/\" });\n    userLogout(formData).finally(() => {\n      history.push(\"/user-pages/login-1\");\n    });\n  };\n\n  const onSubmit = async (data) => {\n    delete data.terms;\n\n    if(!data.password){\n        delete data.password\n    }\n\n    try {\n      const result = await updateProfile(data, cookie?.user?.id);\n      setCookie('user', result.data , { path: '/' });\n      toast.success(\"Profile updated sucssefully\");\n    } catch (error) {\n        if (error?.response?.data?.message) {\n            toast.error(error?.response?.data.message);\n        } else {\n            toast.error(process.env.REACT_APP_ERROR_MESSAGE);\n        }\n\n        if (error?.response?.data?.code === 401) {\n          onClickLogoutHandler();\n        }\n    }\n  };\n\n  var strongRegex = new RegExp(\"^(?=.*[A-Za-z])(?=.*[0-9])(?=.{8,})\");\n  var strongRegexMo = new RegExp(\n    \"^\\\\s*(?:\\\\+?(\\\\d{1,3}))?[-. (]*(\\\\d{3})[-. )]*(\\\\d{3})[-. ]*(\\\\d{4})(?: *x(\\\\d+))?\\\\s*$\"\n  );\n\n  return (\n    <div>\n      <div className=\"d-flex align-items-center auth px-0\">\n        <div className=\"row w-100 mx-0\">\n          <div className=\"col-lg-7 mx-auto\">\n            <div className=\"auth-form-light text-left py-5 px-4 px-sm-5\">\n              <div className=\"d-flex align-items-center justify-content-center\">\n                <div className=\"nav-profile-img\">\n                  <img\n                    src={require(\"../../assets/images/faces/face1.jpg\")}\n                    alt=\"user\"\n                  />\n                  <span className=\"availability-status online\"></span>\n                </div>\n              </div>\n              <h4>Change in details?</h4>\n              <h6 className=\"font-weight-light\">\n                Update your profile is normal, no required to verify again\n              </h6>\n              <form\n                className=\"pt-3\"\n                autoComplete=\"new-password\"\n                onSubmit={handleSubmit(onSubmit)}\n              >\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    id=\"exampleInputUsername1\"\n                    placeholder=\"Username\"\n                    name=\"name\"\n                    defaultValue={cookie?.user?.name}\n                    {...register(\"name\", { required: true })}\n                  />\n                  {errors && errors.name && <p>name is required field</p>}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    id=\"exampleInputEmail1\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    defaultValue={cookie?.user?.email}\n                    {...register(\"email\", {\n                      required: true,\n                      pattern: /^\\S+@\\S+$/i,\n                    })}\n                  />\n                  {errors &&\n                    errors.email &&\n                    errors.email.type === \"required\" && (\n                      <p>email is required field</p>\n                    )}\n                  {errors &&\n                    errors.email &&\n                    errors.email.type === \"pattern\" && (\n                      <p>invalid email formate</p>\n                    )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    id=\"exampleInputUsername1\"\n                    placeholder=\"Date of birth\"\n                    name=\"dob\"\n                    {...register(\"dob\", { required: true })}\n                    defaultValue={cookie?.user?.dob}\n                  />\n                  {errors && errors.dob && <p>birthdate is required field</p>}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    id=\"exampleInputUsername1\"\n                    placeholder=\"Contact number\"\n                    name=\"contactno\"\n                    {...register(\"contactno\", {\n                      required: true,\n                      pattern: strongRegexMo,\n                    })}\n                    defaultValue={cookie?.user?.contactno}\n                  />\n                  {errors &&\n                    errors.contactno &&\n                    errors.contactno.type === \"required\" && (\n                      <p>contact number is required field</p>\n                    )}\n                  {errors &&\n                    errors.contactno &&\n                    errors.contactno.type === \"pattern\" && (\n                      <p>invalid phone number please use valid formate</p>\n                    )}\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    id=\"exampleFormControlSelect2\"\n                    defaultValue={cookie?.user?.country}\n                    name=\"country\"\n                    {...register(\"country\", {\n                      required: true,\n                    })}\n                  >\n                    <option>Country</option>\n                    <option>United States of America</option>\n                    <option selected>India</option>\n                    <option>United Kingdom</option>\n                    <option>Germany</option>\n                    <option>Argentina</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className=\"form-control form-control-lg\"\n                    id=\"exampleInputPassword1\"\n                    placeholder=\"Password\"\n                    autoComplete=\"new-password\"\n                    name=\"password\"\n                    {...register(\"password\", {\n                      required: false,\n                      pattern: strongRegex,\n                    })}\n                  />\n                  <p>\n                   Note :- if you don't want to update your password then simply leave it blank or fill your new password\n                  </p>\n\n                  {errors &&\n                    errors.password &&\n                    errors.password.type === \"pattern\" && (\n                      <p>\n                        password should have at least 8 characters , 1 number\n                        and latter\n                      </p>\n                    )}\n                </div>\n                <div className=\"mb-4\">\n                  <div className=\"form-check\">\n                    <label className=\"form-check-label text-muted\">\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-check-input\"\n                        name=\"terms\"\n                        {...register(\"terms\", { required: true })}\n                      />\n                      <i className=\"input-helper\"></i> Confirm your deatils\n                    </label>\n                  </div>\n                </div>\n                <div className=\"mt-3\">\n                  <button\n                    className=\"btn btn-block btn-primary btn-lg font-weight-medium auth-form-btn\"\n                    type=\"submit\"\n                    disabled={!isDirty || !isValid}\n                  >\n                    UPDATE PROFILE\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;\n"],"sourceRoot":""}