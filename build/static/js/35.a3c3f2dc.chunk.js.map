{"version":3,"sources":["app/user-pages/Login.js"],"names":["Login","history","useHistory","useForm","mode","register","handleSubmit","formState","errors","isDirty","isValid","useCookies","setCookie","onSubmit","data","a","terms","login","result","user","auth","path","localStorage","setItem","tokens","access","token","refresh","push","toast","success","response","message","error","process","handleLogin","googleData","formData","JSON","stringify","tokenId","googleLogin","className","src","require","alt","Group","Control","type","placeholder","size","name","required","pattern","email","password","disabled","to","clientId","buttonText","onSuccess","onFailure","cookiePolicy"],"mappings":"sQAgIeA,UAvHD,WACZ,IAAMC,EAAUC,cAGhB,EAA6EC,YAAQ,CACnFC,KAAM,aADAC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAlB,IAAgCC,UAAaC,EAA7C,EAA6CA,OAASC,EAAtD,EAAsDA,QAASC,EAA/D,EAA+DA,QAI/D,EAAsBC,YAAW,CAAC,SAAzBC,EAAT,oBAGMC,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,oEACRD,EAAKE,MADG,kBAIQC,YAAMH,GAJd,QAIPI,EAJO,QAKNJ,KAAKK,KAAKC,KAAO,WACxBR,EAAU,OAAQM,EAAOJ,KAAKK,KAAO,CAAEE,KAAM,MAC7CC,aAAaC,QAAQ,cAAcL,EAAOJ,KAAKU,OAAOC,OAAOC,OAC7DJ,aAAaC,QAAQ,eAAeL,EAAOJ,KAAKU,OAAOG,QAAQD,OAC/DzB,EAAQ2B,KAAK,cACbC,IAAMC,QAAQ,sBAVD,kDAYV,MAAS,KAAMC,UAAY,KAAMA,SAASjB,MAAQ,KAAMiB,SAASjB,KAAKkB,QACvEH,IAAMI,MAAM,KAAMF,SAASjB,KAAKkB,SAGhCH,IAAMI,MAAMC,wFAhBD,0DAAH,sDAqBRC,EAAW,uCAAG,WAAMC,GAAN,iBAAArB,EAAA,6DACZsB,EAAWC,KAAKC,UAAU,CAC7Bb,MAAOU,EAAWI,UAFH,kBAMMC,YAAYJ,GANlB,QAMTnB,EANS,QAORJ,KAAKK,KAAKC,KAAO,WACxBR,EAAU,OAAQM,EAAOJ,KAAKK,KAAM,CAAEE,KAAM,MAC5CC,aAAaC,QAAQ,cAAeL,EAAOJ,KAAKU,OAAOC,OAAOC,OAC9DJ,aAAaC,QAAQ,eAAgBL,EAAOJ,KAAKU,OAAOG,QAAQD,OAChEG,IAAMC,QAAQ,qBACd7B,EAAQ2B,KAAK,cAZE,kDAeb,MACA,KAAMG,UACN,KAAMA,SAASjB,MACf,KAAMiB,SAASjB,KAAKkB,QAEpBH,IAAMI,MAAM,KAAMF,SAASjB,KAAKkB,SAEhCH,IAAMI,MAAMC,wFAtBC,0DAAH,sDA2BjB,OACE,6BACI,yBAAKQ,UAAU,uCACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,+CACb,yBAAKA,UAAU,cACb,yBAAKC,IAAKC,EAAQ,KAAqCC,IAAI,UAE7D,wDACA,wBAAIH,UAAU,qBAAd,wBACA,kBAAC,IAAD,CAAMA,UAAU,OAAO7B,SAAUP,EAAaO,IAC5C,kBAAC,IAAKiC,MAAN,CAAYJ,UAAU,iCACpB,kBAAC,IAAKK,QAAN,eAAcC,KAAK,QAAQC,YAAY,QAAQC,KAAK,KAAKC,KAAK,QAAQT,UAAU,UAAYrC,EAAS,QAAS,CAAE+C,UAAU,EAAOC,QAAS,iBAD5I,IACgK,6BAC7J7C,GAAUA,EAAO8C,OAA+B,aAAtB9C,EAAO8C,MAAMN,MAAuB,sDAC9DxC,GAAUA,EAAO8C,OAA+B,YAAtB9C,EAAO8C,MAAMN,MAAsB,qDAEhE,kBAAC,IAAKF,MAAN,CAAYJ,UAAU,iCACpB,kBAAC,IAAKK,QAAN,eAAcC,KAAK,WAAWC,YAAY,WAAWC,KAAK,KAAKR,UAAU,SAASS,KAAK,YAAe9C,EAAS,WAAY,CAAE+C,UAAU,MADzI,IACqJ,6BACpJ5C,GAAUA,EAAO+C,UAAY,0DAE9B,yBAAKb,UAAU,QACb,4BAAQA,UAAU,oEAAoEc,UAAW/C,IAAYC,GAA7G,YAEF,yBAAKgC,UAAU,0DACb,yBAAKA,UAAU,cACb,2BAAOA,UAAU,+BACf,yCAAOM,KAAK,WAAWN,UAAU,mBAAmBS,KAAK,SAAa9C,EAAS,WAC/E,uBAAGqC,UAAU,iBAFf,sBAMF,kBAAC,IAAD,CAAMe,GAAG,gCAAgCf,UAAU,wBAAnD,qBAEF,yBAAKA,UAAU,wCACf,kBAAC,IAAD,CACEgB,SAAUxB,2EACVyB,WAAW,sBACXC,UAAWzB,EACX0B,UAAW1B,EACX2B,aAAc,wBAGhB,yBAAKpB,UAAU,QACb,4BAAQM,KAAK,SAASN,UAAU,4CAC9B,uBAAGA,UAAU,0BADf,2BAIF,yBAAKA,UAAU,sCAAf,0BACyB,kBAAC,IAAD,CAAMe,GAAG,yBAAyBf,UAAU,gBAA5C","file":"static/js/35.a3c3f2dc.chunk.js","sourcesContent":["import React from 'react'\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Form } from 'react-bootstrap';\nimport { useForm } from \"react-hook-form\";\nimport { useCookies  } from 'react-cookie';\nimport { googleLogin, login } from \"../../utils/APIs\";\nimport { toast } from 'react-toastify';\nimport GoogleLogin from 'react-google-login';\n\nconst Login = () => {\n  const history = useHistory()\n\n\n  const { register, handleSubmit, formState: { errors , isDirty, isValid } } = useForm({\n    mode: \"onChange\"\n  });\n\n  const [, setCookie] = useCookies(['user']);\n\n\n  const onSubmit = async (data) => {\n    delete data.terms\n\n    try {\n      const result = await login(data)\n      result.data.user.auth = 'verified'\n      setCookie('user', result.data.user , { path: '/' });\n      localStorage.setItem('accessToken',result.data.tokens.access.token)\n      localStorage.setItem('refreshToken',result.data.tokens.refresh.token)\n      history.push('/dashboard')\n      toast.success('login Successfully')\n    } catch (error) {\n      if(error && error.response && error.response.data && error.response.data.message){\n        toast.error(error.response.data.message)\n      }\n      else {\n        toast.error(process.env.REACT_APP_ERROR_MESSAGE)\n      }\n    }\n  };\n\n  const handleLogin = async googleData => {\n    const formData = JSON.stringify({\n       token: googleData.tokenId\n     })\n \n     try {\n       const result = await googleLogin(formData);\n       result.data.user.auth = \"verified\";\n       setCookie(\"user\", result.data.user, { path: \"/\" });\n       localStorage.setItem(\"accessToken\", result.data.tokens.access.token);\n       localStorage.setItem(\"refreshToken\", result.data.tokens.refresh.token);\n       toast.success(\"login sucssefully\");\n       history.push(\"/dashboard\");\n     } catch (error) {\n       if (\n         error &&\n         error.response &&\n         error.response.data &&\n         error.response.data.message\n       ) {\n         toast.error(error.response.data.message);\n       } else {\n         toast.error(process.env.REACT_APP_ERROR_MESSAGE);\n       }\n     }\n   }\n\n  return (\n    <div>\n        <div className=\"d-flex align-items-center auth px-0\">\n          <div className=\"row w-100 mx-0\">\n            <div className=\"col-lg-4 mx-auto\">\n              <div className=\"auth-form-light text-left py-5 px-4 px-sm-5\">\n                <div className=\"brand-logo\">\n                  <img src={require(\"../../assets/images/fcn_logo.png\")} alt=\"logo\" />\n                </div>\n                <h4>Hello! let's get started</h4>\n                <h6 className=\"font-weight-light\">Sign in to continue.</h6>\n                <Form className=\"pt-3\" onSubmit={handleSubmit(onSubmit)}>\n                  <Form.Group className=\"d-flex flex-wrap search-field\">\n                    <Form.Control type=\"email\" placeholder=\"Email\" size=\"lg\" name=\"email\" className=\"h-auto\"{...register(\"email\", { required: true , pattern: /^\\S+@\\S+$/i })} /> <br />\n                    {errors && errors.email && errors.email.type === 'required' && <p>email is required field</p>}\n                    {errors && errors.email && errors.email.type === 'pattern' && <p>invalid email formate</p>}\n                  </Form.Group>\n                  <Form.Group className=\"d-flex flex-wrap search-field\">\n                    <Form.Control type=\"password\" placeholder=\"Password\" size=\"lg\" className=\"h-auto\" name=\"password\" {...register(\"password\", { required: true })} /> <br />\n                  {errors && errors.password && <p>password is required field</p>}\n                  </Form.Group>\n                  <div className=\"mt-3\">\n                    <button className=\"btn btn-block btn-primary btn-lg font-weight-medium auth-form-btn\" disabled={!isDirty || !isValid}>SIGN IN</button>\n                  </div>\n                  <div className=\"my-2 d-flex justify-content-between align-items-center\">\n                    <div className=\"form-check\">\n                      <label className=\"form-check-label text-muted\">\n                        <input type=\"checkbox\" className=\"form-check-input\" name=\"terms\"  {...register(\"terms\")}/>\n                        <i className=\"input-helper\"></i>\n                        Keep me signed in\n                      </label>\n                    </div>\n                    <Link to=\"/user-pages/forgot-password-1\" className=\"auth-link text-black\">Forgot password?</Link>\n                  </div>\n                  <div className=\"mt-3 mb-3 google-registration-button\">\n                  <GoogleLogin\n                    clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\n                    buttonText=\"Sign up with Google\"\n                    onSuccess={handleLogin}\n                    onFailure={handleLogin}\n                    cookiePolicy={\"single_host_origin\"}\n                  />\n                </div>\n                  <div className=\"mb-2\">\n                    <button type=\"button\" className=\"btn btn-block btn-facebook auth-form-btn\">\n                      <i className=\"mdi mdi-facebook mr-2\"></i>Connect using facebook\n                    </button>\n                  </div>\n                  <div className=\"text-center mt-4 font-weight-light\">\n                    Don't have an account? <Link to=\"/user-pages/register-1\" className=\"text-primary\">Create</Link>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          </div>\n        </div>  \n      </div>\n  )\n}\n\nexport default Login"],"sourceRoot":""}