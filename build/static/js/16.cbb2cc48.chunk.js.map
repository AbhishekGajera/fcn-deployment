{"version":3,"sources":["app/client-component/SipCalc/Calc/index.js","app/client-component/SipCalc/index.js"],"names":["Calc","useState","type","settype","amounts","setamounts","totalYear","settotalYear","returnRateAmount","setreturnRateAmount","settotalValue","futureValues","setfutureValues","investedValue","setinvestedValue","React","show","setShow","useForm","mode","register","handleSubmit","formState","onSubmit","errors","isDirty","isValid","data","a","console","log","responsive","animation","animateScale","animateRotate","legend","trafficOptions","trafficData","settrafficData","useEffect","ctx","document","getElementById","getContext","gradientdonut1","createLinearGradient","addColorStop","gradientdonut2","datasets","backgroundColor","hoverBackgroundColor","borderColor","legendColor","labels","calculateResult","instalments","investment","monthlyRate","months","futureValue","total","Math","pow","round","onChangeAmount","changeEvent","target","value","isNaN","onChangeRate","onChangeYear","numberWithCommas","x","toString","replace","onHide","backdrop","keyboard","Header","closeButton","Title","Body","className","Group","Control","placeholder","name","required","selected","onClick","window","open","Container","id","defaultActiveKey","sm","variant","Item","Link","eventKey","style","padding","Content","border","Pane","margin","onChange","width","accentColor","size","tooltip","max","display","justifyContent","options","SipCalc","aria-label","href","event","preventDefault","aria-current"],"mappings":"mPA4hBeA,IArhBF,WACX,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,EAA8BF,mBAAS,MAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAgDN,mBAAS,IAAzD,mBAAOO,EAAP,KAAyBC,EAAzB,KAEA,EAAoCR,mBAAS,GAA7C,mBAAmBS,GAAnB,WACA,EAAwCT,mBAAS,GAAjD,mBAAOU,EAAP,KAAqBC,EAArB,KACA,EAA0CX,mBAAS,GAAnD,mBAAOY,EAAP,KAAsBC,EAAtB,KACA,EAAwBC,IAAMd,UAAS,GAAvC,mBAAOe,EAAP,KAAaC,EAAb,KAMA,EAIIC,YAAQ,CACVC,KAAM,aAJNC,EADF,EACEA,SACAC,EAFF,EAEEA,aAFF,IAGEC,UAIIC,GAPN,EAGeC,OAHf,EAGuBC,QAHvB,EAGgCC,QAIlB,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDACfC,QAAQC,IAAIH,GADG,2CAAH,uDAId,EAAyB1B,mBAAS,CAChC8B,YAAY,EACZC,UAAW,CACTC,cAAc,EACdC,eAAe,GAEjBC,QAAQ,IANHC,EAAP,oBASA,EAAsCnC,mBAAS,IAA/C,mBAAOoC,EAAP,KAAoBC,EAApB,KACAC,qBAAU,WAER,IAAIC,EAAMC,SAASC,eAAe,kBAAkBC,WAAW,MAE3DC,EAAiBJ,EAAIK,qBAAqB,EAAG,EAAG,EAAG,KACvDD,EAAeE,aAAa,EAAG,yBAC/BF,EAAeE,aAAa,EAAG,0BAE/B,IAAIC,EAAiBP,EAAIK,qBAAqB,EAAG,EAAG,EAAG,IACvDE,EAAeD,aAAa,EAAG,wBAC/BC,EAAeD,aAAa,EAAG,0BAgB/BR,EAduB,CACrBU,SAAU,CACR,CACErB,KAAM,CAACd,EAAeF,GACtBsC,gBAAiB,CAACL,EAAgBG,GAClCG,qBAAsB,CAACN,EAAgBG,GACvCI,YAAa,CAACP,EAAgBG,GAC9BK,YAAa,CAACR,EAAgBG,KAKlCM,OAAQ,CAAC,kBAAmB,oBAG7B,CAACxC,EAAeF,IAEnBI,IAAMwB,WAAU,WACde,OACC,CAAClD,EAASE,EAAWE,EAAkBN,IAE1C,IAAMoD,GAAkB,WACtB,IACIC,EADAC,EAAapD,EAEjB,GAAa,IAATF,EAAY,CACd,IAAIuD,EAAcjD,EAAmB,GAAK,IACtCkD,EAAqB,GAAZpD,EACTqD,EAAc,EAEdC,EAAQJ,EAAalD,EAAYE,EAErCmD,EACGH,GACE,EAAIC,IACJI,KAAKC,IAAI,EAAIL,EAAaC,GAAU,GACvCD,EACFF,EAAcC,EAAalD,EAAY,OAClC,CACDsD,EAAQJ,EACZG,EAAcE,KAAKE,MACjBF,KAAKC,IAAI,EAAItD,EAAmB,IAAKF,GAAaF,GAEpDmD,EAAcC,EAGhB9C,EAAwB,QAAVkD,EAAkB,IAAMA,GACtChD,EAAgBiD,KAAKE,MAAMJ,IAC3B7C,EAAiByC,IAGbS,GAAiB,SAACC,GAClBA,EAAYC,OAAOC,MAAQ,QAC7B9D,EAAW4D,EAAYC,OAAOC,OAI9BF,EAAYC,OAAOC,MAAQ,MAC1BC,OAAOH,EAAYC,OAAOC,QAE3B9D,EAAW,MAITgE,GAAe,SAACJ,GAChBA,EAAYC,OAAOC,MAAQ,IAC7B1D,EAAoBwD,EAAYC,OAAOC,OAGrCF,EAAYC,OAAOC,MAAQ,KAAOC,OAAOH,EAAYC,OAAOC,QAC9D1D,EAAoB,KAIlB6D,GAAe,SAACL,GAChBA,EAAYC,OAAOC,MAAQ,IAC7B5D,EAAa0D,EAAYC,OAAOC,OAG9BF,EAAYC,OAAOC,MAAQ,KAAOC,OAAOH,EAAYC,OAAOC,QAC9D5D,EAAa,KAIXgE,GAAmB,SAACC,GACxB,OAAOA,EAAEC,WAAWC,QAAQ,wBAAyB,MAGvD,OACE,oCACC,kBAAC,IAAD,CACG1D,KAAMA,EACN2D,OAhIc,kBAAM1D,GAAQ,IAiI5B2D,SAAS,SACTC,UAAU,GAEV,kBAAC,IAAMC,OAAP,CAAcC,aAAW,GACvB,kBAAC,IAAMC,MAAP,iBAEF,kBAAC,IAAMC,KAAP,KACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,0BACEA,UAAU,cACV3D,SAAUF,EAAaE,IAEvB,yBAAK2D,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAKC,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,gBAGA,yBAAKA,UAAU,YACb,kBAAC,IAAKE,QAAN,eACElF,KAAK,OACLmF,YAAY,eACZC,KAAK,UACDlE,EAAS,SAAU,CAAEmE,UAAU,QAIzC,kBAAC,IAAKJ,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,wBAGA,yBAAKA,UAAU,YACb,kBAAC,IAAKE,QAAN,eACElF,KAAK,OACLmF,YAAY,uBACZC,KAAK,kBACDlE,EAAS,iBAAkB,CAC7BmE,UAAU,QAKlB,kBAAC,IAAKJ,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,wBAGA,yBAAKA,UAAU,YACb,4BAAQA,UAAU,eAChB,4BAAQM,UAAU,GAAlB,SACA,yCACA,yCACA,2CACA,6CAIN,kBAAC,IAAKL,MAAN,CAAYD,UAAU,OACpB,2BAAOA,UAAU,2BAAjB,iBAGA,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,2BAAOA,UAAU,oBACf,yCACEhF,KAAK,WACLgF,UAAU,mBACVI,KAAK,WACDlE,EAAS,UAAW,CAAEmE,UAAU,MAEtC,uBAAGL,UAAU,iBAPf,aAYJ,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,2BAAOA,UAAU,oBACf,yCACEhF,KAAK,WACLgF,UAAU,mBACVI,KAAK,UACDlE,EAAS,SAAU,CAAEmE,UAAU,MAErC,uBAAGL,UAAU,iBAPf,eAgBV,yBAAKA,UAAU,sCAAf,mBACmB,IACjB,uBACEO,QAAS,kBAAMC,OAAOC,KAAK,6BAC3BT,UAAU,gBAFZ,eAOF,yBAAKA,UAAU,eACb,4BACEA,UAAU,4DACVhF,KAAK,UAFP,kBAcd,yBAAKgF,UAAU,OACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,kBAAC,IAAIU,UAAL,CAAeC,GAAG,oBAAoBC,iBAAiB,SACrD,kBAAC,IAAD,CAAKC,GAAI,IACP,kBAAC,IAAD,CAAKC,QAAQ,QAAQd,UAAU,cAC7B,kBAAC,IAAIe,KAAL,CAAUR,QAAS,kBAAMtF,EAAQ,KAC/B,kBAAC,IAAI+F,KAAL,CAAUC,SAAS,SAAnB,QAEF,kBAAC,IAAIF,KAAL,CAAUR,QAAS,kBAAMtF,EAAQ,KAC/B,kBAAC,IAAI+F,KAAL,CAAUC,SAAS,UAAnB,cAGC,IACP,6BACA,yBAAKC,MAAO,CAAEC,QAAS,mBACrB,kBAAC,IAAIC,QAAL,CAAaF,MAAO,CAAEG,OAAQ,SAC5B,kBAAC,IAAIC,KAAL,CAAUL,SAAS,SACjB,yBAAKC,MAAO,CAAEK,OAAQ,aACpB,yBAAKvB,UAAU,8BACb,oDACA,6BACE,2BACEhF,KAAK,OACLgF,UAAU,WACVW,GAAG,qBACHP,KAAK,aACLnB,MAAO/D,EACPsG,SAAU1C,KACT,IARL,WAYF,2BACE9D,KAAK,QACLkG,MAAO,CAAEO,MAAO,OAAQC,YAAa,WACrCzC,MAAO/D,EACPsG,SAAU1C,GACV6C,KAAK,KACLC,QAAQ,MACRd,QAAQ,UACRe,IAAK,OAGT,yBAAKX,MAAO,CAAEK,OAAQ,aACpB,yBAAKvB,UAAU,8BACb,4DACA,6BACE,2BACEhF,KAAK,OACLgF,UAAU,WACVW,GAAG,qBACHP,KAAK,aACLnB,MAAO3D,EACPkG,SAAUrC,KACT,IARL,MAYF,6BACE,2BACEnE,KAAK,QACLkG,MAAO,CAAEO,MAAO,OAAQC,YAAa,WACrCzC,MAAO3D,EACPkG,SAAUrC,GACVwC,KAAK,KACLC,QAAQ,MACRd,QAAQ,UACRe,IAAK,OAIX,yBAAKX,MAAO,CAAEK,OAAQ,aACpB,yBAAKvB,UAAU,8BACb,6CACA,6BACE,2BACEhF,KAAK,OACLgF,UAAU,WACVW,GAAG,qBACHP,KAAK,aACLnB,MAAO7D,EACPoG,SAAUpC,KACT,IARL,OAYF,2BACEpE,KAAK,QACLkG,MAAO,CAAEO,MAAO,OAAQC,YAAa,WACrCzC,MAAO7D,EACPoG,SAAUpC,GACVuC,KAAK,KACLC,QAAQ,MACRd,QAAQ,UACRe,IAAK,OAIX,kBAAC,IAAIP,KAAL,CAAUL,SAAS,UACjB,yBAAKC,MAAO,CAAEK,OAAQ,aACpB,yBAAKvB,UAAU,8BACb,kDACA,6BACE,2BACEhF,KAAK,OACLgF,UAAU,WACVW,GAAG,qBACHP,KAAK,aACLnB,MAAO/D,EACPsG,SAAU1C,KACT,IARL,WAYF,2BACE9D,KAAK,QACLkG,MAAO,CAAEO,MAAO,OAAQC,YAAa,WACrCzC,MAAO/D,EACPsG,SAAU1C,GACV6C,KAAK,KACLC,QAAQ,MACRd,QAAQ,UACRe,IAAK,OAGT,yBAAKX,MAAO,CAAEK,OAAQ,aACpB,yBAAKvB,UAAU,8BACb,4DACA,6BACE,2BACEhF,KAAK,OACLgF,UAAU,WACVW,GAAG,qBACHP,KAAK,aACLnB,MAAO3D,EACPkG,SAAUrC,KACT,IARL,MAYF,6BACE,2BACEnE,KAAK,QACLkG,MAAO,CAAEO,MAAO,OAAQC,YAAa,WACrCzC,MAAO3D,EACPkG,SAAUrC,GACVwC,KAAK,KACLC,QAAQ,MACRd,QAAQ,UACRe,IAAK,OAIX,yBAAKX,MAAO,CAAEK,OAAQ,aACpB,yBAAKvB,UAAU,8BACb,6CACA,6BACE,2BACEhF,KAAK,OACLgF,UAAU,WACVW,GAAG,qBACHP,KAAK,aACLnB,MAAO7D,EACPoG,SAAUpC,KACT,IARL,OAYF,2BACEpE,KAAK,QACLkG,MAAO,CAAEO,MAAO,OAAQC,YAAa,WACrCzC,MAAO7D,EACPoG,SAAUpC,GACVuC,KAAK,KACLC,QAAQ,MACRd,QAAQ,UACRe,IAAK,UAQjB,6BACE,yBACEX,MAAO,CACLY,QAAS,OACTC,eAAgB,gBAChBR,OAAQ,aAGV,iDACA,8BAAOlC,GAAiB1D,GAAxB,iBAEF,yBACEuF,MAAO,CACLY,QAAS,OACTC,eAAgB,gBAChBR,OAAQ,aAGV,8CACA,8BACGlC,GAAiB5D,EAAeE,GADnC,iBAIF,yBACEuF,MAAO,CACLY,QAAS,OACTC,eAAgB,gBAChBR,OAAQ,aAGV,6CACA,8BAAOlC,GAAiB5D,GAAxB,qBAMV,yBAAKuE,UAAU,qCACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cACZ,4BACEhF,KAAK,SACLgF,UAAU,mCAFZ,eAOF,kBAAC,WAAD,CACEvD,KAAMU,EACN6E,QAAS9E,EACTyD,GAAG,mBAEL,yBACEA,GAAG,uBACHX,UAAU,0DAEV,4BACE,4BACE,0BAAMA,UAAU,wBADlB,mBAIA,4BACE,0BAAMA,UAAU,2BADlB,mBAON,yBAAKA,UAAU,aACf,wBAAIA,UAAU,yBACV,4BACEhF,KAAK,SACLgF,UAAU,kCACVO,QA3fC,kBAAMxE,GAAQ,KAwfjB,sB,iCC5gBlB,oCA6BekG,UA1BC,WAEd,OACE,6BACE,6BACE,yBAAKjC,UAAU,eACb,wBAAIA,UAAU,cAAd,eACA,yBAAKkC,aAAW,cACd,wBAAIlC,UAAU,cACZ,wBAAIA,UAAU,mBACZ,uBAAGmC,KAAK,KAAK5B,QAAS,SAAC6B,GAAD,OAAWA,EAAMC,mBAAvC,UAIF,wBAAIrC,UAAU,yBAAyBsC,eAAa,QAApD,kBAMN,kBAAC,IAAD","file":"static/js/16.cbb2cc48.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { Tab, Col, Nav } from \"react-bootstrap\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { useForm } from \"react-hook-form\";\nimport { Form } from \"react-bootstrap\";\n\nconst Calc = () => {\n  const [type, settype] = useState(0);\n\n  const [amounts, setamounts] = useState(25000);\n  const [totalYear, settotalYear] = useState(10);\n  const [returnRateAmount, setreturnRateAmount] = useState(12);\n\n  const [totalValue, settotalValue] = useState(0);\n  const [futureValues, setfutureValues] = useState(0);\n  const [investedValue, setinvestedValue] = useState(0);\n  const [show, setShow] = React.useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isDirty, isValid },\n  } = useForm({\n    mode: \"onChange\",\n  });\n  const onSubmit = async (data) => {\n    console.log(data);\n  };\n  // chart management\n  const [trafficOptions] = useState({\n    responsive: true,\n    animation: {\n      animateScale: true,\n      animateRotate: true,\n    },\n    legend: false,\n  });\n\n  const [trafficData, settrafficData] = useState({});\n  useEffect(() => {\n    // your code\n    var ctx = document.getElementById(\"visitSaleChart\").getContext(\"2d\");\n\n    var gradientdonut1 = ctx.createLinearGradient(0, 0, 0, 181);\n    gradientdonut1.addColorStop(0, \"rgba(54, 215, 232, 1)\");\n    gradientdonut1.addColorStop(1, \"rgba(177, 148, 250, 1)\");\n\n    var gradientdonut2 = ctx.createLinearGradient(0, 0, 0, 50);\n    gradientdonut2.addColorStop(0, \"rgba(6, 185, 157, 1)\");\n    gradientdonut2.addColorStop(1, \"rgba(132, 217, 210, 1)\");\n\n    const newTrafficData = {\n      datasets: [\n        {\n          data: [investedValue, futureValues],\n          backgroundColor: [gradientdonut1, gradientdonut2],\n          hoverBackgroundColor: [gradientdonut1, gradientdonut2],\n          borderColor: [gradientdonut1, gradientdonut2],\n          legendColor: [gradientdonut1, gradientdonut2],\n        },\n      ],\n\n      // These labels appear in the legend and in the tooltips when hovering different arcs\n      labels: [\"invested amount\", \"Est. returns\"],\n    };\n    settrafficData(newTrafficData);\n  }, [investedValue, futureValues]);\n\n  React.useEffect(() => {\n    calculateResult();\n  }, [amounts, totalYear, returnRateAmount, type]);\n\n  const calculateResult = () => {\n    let investment = amounts;\n    let instalments;\n    if (type === 0) {\n      var monthlyRate = returnRateAmount / 12 / 100;\n      var months = totalYear * 12;\n      var futureValue = 0;\n\n      var total = investment * totalYear * returnRateAmount;\n\n      futureValue =\n        (investment *\n          (1 + monthlyRate) *\n          (Math.pow(1 + monthlyRate, months) - 1)) /\n        monthlyRate;\n      instalments = investment * totalYear * 12;\n    } else {\n      var total = investment;\n      futureValue = Math.round(\n        Math.pow(1 + returnRateAmount / 100, totalYear) * amounts\n      );\n      instalments = investment;\n    }\n\n    settotalValue(total === \"NaN\" ? \"0\" : total);\n    setfutureValues(Math.round(futureValue));\n    setinvestedValue(instalments);\n  };\n\n  const onChangeAmount = (changeEvent) => {\n    if (changeEvent.target.value < 100001) {\n      setamounts(changeEvent.target.value);\n    }\n\n    if (\n      changeEvent.target.value > 100000 &&\n      !isNaN(+changeEvent.target.value)\n    ) {\n      setamounts(100000);\n    }\n  };\n\n  const onChangeRate = (changeEvent) => {\n    if (changeEvent.target.value < 31) {\n      setreturnRateAmount(changeEvent.target.value);\n    }\n\n    if (changeEvent.target.value > 30 && !isNaN(+changeEvent.target.value)) {\n      setreturnRateAmount(30);\n    }\n  };\n\n  const onChangeYear = (changeEvent) => {\n    if (changeEvent.target.value < 31) {\n      settotalYear(changeEvent.target.value);\n    }\n\n    if (changeEvent.target.value > 30 && !isNaN(+changeEvent.target.value)) {\n      settotalYear(10);\n    }\n  };\n\n  const numberWithCommas = (x) => {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  return (\n    <>\n     <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Deposit</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"row\">\n            <div className=\"col-12 \">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <form\n                    className=\"form-sample\"\n                    onSubmit={handleSubmit(onSubmit)}\n                  >\n                    <div className=\"row\">\n                      <div className=\"col-md-12\">\n                        <Form.Group className=\"row\">\n                          <label className=\"col-sm-3 col-form-label\">\n                            Enter Amount\n                          </label>\n                          <div className=\"col-sm-9\">\n                            <Form.Control\n                              type=\"text\"\n                              placeholder=\"Enter Amount\"\n                              name=\"amount\"\n                              {...register(\"amount\", { required: true })}\n                            />\n                          </div>\n                        </Form.Group>\n                        <Form.Group className=\"row\">\n                          <label className=\"col-sm-3 col-form-label\">\n                            Enter Account-number\n                          </label>\n                          <div className=\"col-sm-9\">\n                            <Form.Control\n                              type=\"text\"\n                              placeholder=\"Enter Account-number\"\n                              name=\"account-number\"\n                              {...register(\"account-number\", {\n                                required: true,\n                              })}\n                            />\n                          </div>\n                        </Form.Group>\n                        <Form.Group className=\"row\">\n                          <label className=\"col-sm-3 col-form-label\">\n                            Enter Account-number\n                          </label>\n                          <div className=\"col-sm-9\">\n                            <select className=\"form-select\">\n                              <option selected={true}>Surat</option>\n                              <option>Masma</option>\n                              <option>Olpad</option>\n                              <option>Navsari</option>\n                              <option>Valsad</option>\n                            </select>\n                          </div>\n                        </Form.Group>\n                        <Form.Group className=\"row\">\n                          <label className=\"col-sm-3 col-form-label\">\n                            Training Type\n                          </label>\n                          <div className=\"col-sm-3\">\n                            <div className=\"form-check\">\n                              <label className=\"form-check-label\">\n                                <input\n                                  type=\"checkbox\"\n                                  className=\"form-check-input\"\n                                  name=\"android\"\n                                  {...register(\"android\", { required: true })}\n                                />\n                                <i className=\"input-helper\"></i>\n                                Android\n                              </label>\n                            </div>\n                          </div>\n                          <div className=\"col-sm-3\">\n                            <div className=\"form-check\">\n                              <label className=\"form-check-label\">\n                                <input\n                                  type=\"checkbox\"\n                                  className=\"form-check-input\"\n                                  name=\"iphone\"\n                                  {...register(\"iphone\", { required: true })}\n                                />\n                                <i className=\"input-helper\"></i>\n                                IPhone\n                              </label>\n                            </div>\n                          </div>\n                        </Form.Group>\n                      </div>\n                    </div>\n\n                    <div className=\"text-center mb-4 font-weight-light\">\n                      for bank details{\" \"}\n                      <a\n                        onClick={() => window.open(\"/user-pages/bank-details\")}\n                        className=\"text-primary\"\n                      >\n                        click here\n                      </a>\n                    </div>\n                    <div className=\"text-center\">\n                      <button\n                        className=\"btn  btn-primary btn-sm font-weight-medium auth-form-btn \"\n                        type=\"submit\"\n                      >\n                        SUBMIT\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal.Body>\n      </Modal>\n        <div className=\"row\">\n          <div className=\"col-md-7 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\n                  <Col sm={12}>\n                    <Nav variant=\"pills\" className=\"d-flex row\">\n                      <Nav.Item onClick={() => settype(0)}>\n                        <Nav.Link eventKey=\"first\">SIP</Nav.Link>\n                      </Nav.Item>\n                      <Nav.Item onClick={() => settype(1)}>\n                        <Nav.Link eventKey=\"second\">Lumpsum</Nav.Link>\n                      </Nav.Item>\n                    </Nav>\n                  </Col>{\" \"}\n                  <br />\n                  <div style={{ padding: \"0px !important\" }}>\n                    <Tab.Content style={{ border: \"none\" }}>\n                      <Tab.Pane eventKey=\"first\">\n                        <div style={{ margin: \"10px 0px\" }}>\n                          <div className=\"investmentInput-controller\">\n                            <span>Monthly investment</span>\n                            <div>\n                              <input\n                                type=\"text\"\n                                className=\"sipInput\"\n                                id=\"exampleInputEmail1\"\n                                name=\"investment\"\n                                value={amounts}\n                                onChange={onChangeAmount}\n                              />{\" \"}\n                              ₹\n                            </div>\n                          </div>\n                          <input\n                            type=\"range\"\n                            style={{ width: \"100%\", accentColor: \"#00d09c\" }}\n                            value={amounts}\n                            onChange={onChangeAmount}\n                            size=\"lg\"\n                            tooltip=\"off\"\n                            variant=\"primary\"\n                            max={100000}\n                          />\n                        </div>\n                        <div style={{ margin: \"10px 0px\" }}>\n                          <div className=\"investmentInput-controller\">\n                            <span>Expected return rate (p.a)</span>\n                            <div>\n                              <input\n                                type=\"text\"\n                                className=\"sipInput\"\n                                id=\"exampleInputEmail1\"\n                                name=\"investment\"\n                                value={returnRateAmount}\n                                onChange={onChangeRate}\n                              />{\" \"}\n                              %\n                            </div>\n                          </div>\n                          <div>\n                            <input\n                              type=\"range\"\n                              style={{ width: \"100%\", accentColor: \"#00d09c\" }}\n                              value={returnRateAmount}\n                              onChange={onChangeRate}\n                              size=\"lg\"\n                              tooltip=\"off\"\n                              variant=\"primary\"\n                              max={30}\n                            />\n                          </div>\n                        </div>\n                        <div style={{ margin: \"10px 0px\" }}>\n                          <div className=\"investmentInput-controller\">\n                            <span>Time period</span>\n                            <div>\n                              <input\n                                type=\"text\"\n                                className=\"sipInput\"\n                                id=\"exampleInputEmail1\"\n                                name=\"investment\"\n                                value={totalYear}\n                                onChange={onChangeYear}\n                              />{\" \"}\n                              Yr\n                            </div>\n                          </div>\n                          <input\n                            type=\"range\"\n                            style={{ width: \"100%\", accentColor: \"#00d09c\" }}\n                            value={totalYear}\n                            onChange={onChangeYear}\n                            size=\"lg\"\n                            tooltip=\"off\"\n                            variant=\"primary\"\n                            max={30}\n                          />\n                        </div>\n                      </Tab.Pane>\n                      <Tab.Pane eventKey=\"second\">\n                        <div style={{ margin: \"10px 0px\" }}>\n                          <div className=\"investmentInput-controller\">\n                            <span>Total investment</span>\n                            <div>\n                              <input\n                                type=\"text\"\n                                className=\"sipInput\"\n                                id=\"exampleInputEmail1\"\n                                name=\"investment\"\n                                value={amounts}\n                                onChange={onChangeAmount}\n                              />{\" \"}\n                              ₹\n                            </div>\n                          </div>\n                          <input\n                            type=\"range\"\n                            style={{ width: \"100%\", accentColor: \"#00d09c\" }}\n                            value={amounts}\n                            onChange={onChangeAmount}\n                            size=\"lg\"\n                            tooltip=\"off\"\n                            variant=\"primary\"\n                            max={100000}\n                          />\n                        </div>\n                        <div style={{ margin: \"10px 0px\" }}>\n                          <div className=\"investmentInput-controller\">\n                            <span>Expected return rate (p.a)</span>\n                            <div>\n                              <input\n                                type=\"text\"\n                                className=\"sipInput\"\n                                id=\"exampleInputEmail1\"\n                                name=\"investment\"\n                                value={returnRateAmount}\n                                onChange={onChangeRate}\n                              />{\" \"}\n                              %\n                            </div>\n                          </div>\n                          <div>\n                            <input\n                              type=\"range\"\n                              style={{ width: \"100%\", accentColor: \"#00d09c\" }}\n                              value={returnRateAmount}\n                              onChange={onChangeRate}\n                              size=\"lg\"\n                              tooltip=\"off\"\n                              variant=\"primary\"\n                              max={30}\n                            />\n                          </div>\n                        </div>\n                        <div style={{ margin: \"10px 0px\" }}>\n                          <div className=\"investmentInput-controller\">\n                            <span>Time period</span>\n                            <div>\n                              <input\n                                type=\"text\"\n                                className=\"sipInput\"\n                                id=\"exampleInputEmail1\"\n                                name=\"investment\"\n                                value={totalYear}\n                                onChange={onChangeYear}\n                              />{\" \"}\n                              Yr\n                            </div>\n                          </div>\n                          <input\n                            type=\"range\"\n                            style={{ width: \"100%\", accentColor: \"#00d09c\" }}\n                            value={totalYear}\n                            onChange={onChangeYear}\n                            size=\"lg\"\n                            tooltip=\"off\"\n                            variant=\"primary\"\n                            max={30}\n                          />\n                        </div>\n                      </Tab.Pane>\n                    </Tab.Content>\n                  </div>\n                </Tab.Container>\n\n                <div>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      margin: \"10px 0px\",\n                    }}\n                  >\n                    <span>Invested amount</span>\n                    <span>{numberWithCommas(investedValue)} &nbsp; ₹</span>\n                  </div>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      margin: \"10px 0px\",\n                    }}\n                  >\n                    <span>Est. returns</span>\n                    <span>\n                      {numberWithCommas(futureValues - investedValue)} &nbsp; ₹\n                    </span>\n                  </div>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      margin: \"10px 0px\",\n                    }}\n                  >\n                    <span>Total value</span>\n                    <span>{numberWithCommas(futureValues)} &nbsp; ₹</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-5 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-gradient-primary btn-fw\"\n                  >\n                    Invest now\n                  </button>\n                </h4>\n                <Doughnut\n                  data={trafficData}\n                  options={trafficOptions}\n                  id=\"visitSaleChart\"\n                />\n                <div\n                  id=\"traffic-chart-legend\"\n                  className=\"rounded-legend legend-vertical legend-bottom-left pt-4\"\n                >\n                  <ul>\n                    <li>\n                      <span className=\"legend-dots bg-info\"></span>Invested\n                      amount\n                    </li>\n                    <li>\n                      <span className=\"legend-dots bg-success\"></span>Est.\n                      returns\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              <div className='mr-3 mb-3'>\n              <h4 className=\"card-title text-right\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-gradient-primary btn-fw\"\n                    onClick={handleShow}\n                  >\n                    Withdrawal\n                  </button>\n                </h4>\n                </div>\n            </div>\n          </div>\n        </div>\n        </>\n  );\n};\n\nexport default Calc;\n","import React from \"react\";\nimport Calc from \"./Calc\";\n\nconst SipCalc = () => {\n\n  return (\n    <div>\n      <div>\n        <div className=\"page-header\">\n          <h3 className=\"page-title\">Calculators</h3>\n          <nav aria-label=\"breadcrumb\">\n            <ol className=\"breadcrumb\">\n              <li className=\"breadcrumb-item\">\n                <a href=\"!#\" onClick={(event) => event.preventDefault()}>\n                  Utils\n                </a>\n              </li>\n              <li className=\"breadcrumb-item active\" aria-current=\"page\">\n              calculators\n              </li>\n            </ol>\n          </nav>\n        </div>\n        <Calc />\n      </div>\n    </div>\n  );\n};\n\nexport default SipCalc;\n"],"sourceRoot":""}